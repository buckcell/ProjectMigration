unit ViewConfigs;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.ComCtrls,
  Vcl.Buttons, System.Actions, Vcl.ActnList,
  MyUtils, Configs;

type
  TWindowConfigs = class(TForm)
    TxtLimit: TEdit;
    PageConfigs: TPageControl;
    TabMigration: TTabSheet;
    TabFirebird: TTabSheet;
    CheckTruncFB: TCheckBox;
    BtnDiscard: TSpeedButton;
    BtnSave: TSpeedButton;
    Actions: TActionList;
    ActSave: TAction;
    ActDiscard: TAction;
    TxtCommit: TEdit;
    RadioGroupCommit: TRadioGroup;
    RadioGroupLimit: TRadioGroup;
    procedure ActDiscardExecute(Sender: TObject);
    procedure ActSaveExecute(Sender: TObject);
    procedure RadioGroupCommitClick(Sender: TObject);
    procedure RadioGroupLimitClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure CheckTruncFBClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);

  private
    procedure LoadConfigs;
  end;

var
  WindowConfigs: TWindowConfigs;
  DidChange: boolean;

implementation

{$R *.dfm}

procedure TWindowConfigs.ActSaveExecute(Sender: TObject);
var
  Commit, Limit, TruncFB: string;
begin
  Commit := TUtils.Iff(RadioGroupCommit.ItemIndex = 0, '-1', TxtCommit.Text);
  Limit := TUtils.Iff(RadioGroupLimit.ItemIndex = 0, '-1', TxtLimit.Text);
  TruncFB := TUtils.Iff(CheckTruncFB.Checked, '1', '0');

  TConfigs.SetConfig('GENERAL', 'Commit', Commit);
  TConfigs.SetConfig('GENERAL', 'Limit', Limit);
  TConfigs.SetConfig('GENERAL', 'TruncFB', TruncFB);

  DidChange := false;

  Close;
end;

procedure TWindowConfigs.CheckTruncFBClick(Sender: TObject);
begin
  DidChange := true;
end;

procedure TWindowConfigs.FormActivate(Sender: TObject);
begin
  LoadConfigs;
  DidChange := false;
end;

procedure TWindowConfigs.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  if DidChange then
  begin
    case MessageDlg('Deseja salvar as configurações?', mtConfirmation, mbYesNoCancel, 0, mbCancel) of
    mrYes:
      ActSaveExecute(BtnSave);
    mrCancel:
      Action := TCloseAction.caNone;
    end;
  end
  else
  begin
    DidChange := false;
  end;
end;

procedure TWindowConfigs.LoadConfigs;
var
  Commit, Limit, TruncFB: integer;
begin
  Commit := TConfigs.GetConfig('GENERAL', 'Commit').ToInteger;
  Limit := TConfigs.GetConfig('GENERAL', 'Limit').ToInteger;
  TruncFB := TConfigs.GetConfig('GENERAL', 'TruncFB').ToInteger;

  if Commit = -1 then
  begin
    RadioGroupCommit.ItemIndex := 0;
  end
  else
  begin
    RadioGroupCommit.ItemIndex := 1;
    TxtCommit.Text := Commit.ToString;
  end;

  if Limit = -1 then
  begin
    RadioGroupLimit.ItemIndex := 0;
  end
  else
  begin
    RadioGroupLimit.ItemIndex := 1;
    TxtLimit.Text := Limit.ToString;
  end;

  CheckTruncFB.Checked := TruncFB = 1;

  PageConfigs.TabIndex := 0;
end;

procedure TWindowConfigs.ActDiscardExecute(Sender: TObject);
begin
  DidChange := false;
  Close;
end;

procedure TWindowConfigs.RadioGroupCommitClick(Sender: TObject);
begin
  DidChange := true;
  if RadioGroupCommit.ItemIndex = 0 then
  begin
    TxtCommit.Enabled := false;
  end
  else
  begin
    TxtCommit.Enabled := true;
    TxtCommit.SetFocus;
  end;
end;

procedure TWindowConfigs.RadioGroupLimitClick(Sender: TObject);
begin
  DidChange := true;
  if RadioGroupLimit.ItemIndex = 0 then
  begin
    TxtLimit.Enabled := false;
  end
  else
  begin
    TxtLimit.Enabled := true;
    TxtLimit.SetFocus;
  end;
end;

end.
